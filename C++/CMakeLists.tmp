cmake_minimum_required(VERSION 3.0)
project(AlgorithmsTest)

# 设置c++11 选项
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

# 打印功能
message("-- system arch:  ${CMAKE_SYSTEM_PROCESSOR}")

# 添加头文件目录
set(INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/ElementNotRepeat")
include_directories(${INCLUDE_DIR})
#message("-- INCLUDE_DIR:  ${INCLUDE_DIR}")

# 添加源文件
message(STATUS "\n------------------------aux_source_directory Test---------------------------------")
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/ElementNotRepeat ElemSrcs)  # 找出目录下所有的源文件,c++对应的是.c/.cpp文件
message("-- ElemSrcs are:  ${ElemSrcs}")

# file函数
message(STATUS "\n------------------------File Test---------------------------------")

message(STATUS "\n\n------------------------Write and Append Test---------------------------------")
file(WRITE ${CMAKE_CURRENT_SOURCE_DIR}/filetest1/filewrite.txt "this is test.\n")       # 向文件写入内容
file(APPEND ${CMAKE_CURRENT_SOURCE_DIR}/filetest2/filewrite.txt "this is append string\n")      # 向文件末尾添加内容


message(STATUS "\n------------------------Read Test---------------------------------")
file(READ ${CMAKE_CURRENT_SOURCE_DIR}/filetest1/filewrite.txt FileReadStr)      # 读取文件内容
message(STATUS "FileReadStr: ${FileReadStr}")


message(STATUS "\n------------------------Strings Test---------------------------------")
file(STRINGS ${CMAKE_CURRENT_SOURCE_DIR}/filetest2/filewrite.txt FileStrings LIMIT_INPUT 100)    # 读取文件内容到列表中
message(STATUS "FileStrings -> ${FileStrings}")

foreach (eachStr IN LISTS FileStrings)      # 逐条打印文本内容
    message(STATUS ${eachStr})
endforeach (eachStr)


message(STATUS "\n------------------------Hash Test---------------------------------")
file(MD5 ${CMAKE_CURRENT_SOURCE_DIR}/filetest2/filewrite.txt md5Str)        # 计算文件的md5
message(STATUS "md5Str ->  ${md5Str}")


message(STATUS "\n------------------------GLOB Test---------------------------------")
file(GLOB ElemSrcsFiles ${CMAKE_CURRENT_SOURCE_DIR}/*)     # 按规则找出目录下所有对应的文件
foreach (GlobFile IN LISTS ElemSrcsFiles)
    message(STATUS "GlobFile ->  ${GlobFile}")
endforeach (GlobFile)


message(STATUS "\n------------------------GLOB_CURSE Test---------------------------------")
file(GLOB_RECURSE ElemSrcsFiles ${CMAKE_CURRENT_SOURCE_DIR}/*cpp)     # 递归的按规则找出目录下所有对应的文件
foreach (GlobFile IN LISTS ElemSrcsFiles)
    message(STATUS "GlobFile ->  ${GlobFile}")
endforeach (GlobFile)


add_executable(Test
        main.cpp
        ${ElemSrcs})